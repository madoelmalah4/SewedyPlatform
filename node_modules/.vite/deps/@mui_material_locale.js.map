{
  "version": 3,
  "sources": ["../../@mui/material/locale/index.js"],
  "sourcesContent": ["export const amET = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'መንገድ አሳይ'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\r\n        },\r\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\r\n        emptyLabelText: 'ባዶ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'አጽዳ',\r\n        closeText: 'ዝጋ',\r\n        loadingText: 'በመጫን ላይ…',\r\n        noOptionsText: 'አማራጮች የሉም',\r\n        openText: 'ክፈት'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'ዝጋ'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'የገጽ አሰሳ',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const arEG = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'إظهار المسار'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'انتقل إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'انتقل إلى الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'انتقل إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'انتقل إلى الصفحة السابقة';\r\n        },\r\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\r\n        emptyLabelText: 'فارغ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'مسح',\r\n        closeText: 'إغلاق',\r\n        loadingText: 'جار التحميل...',\r\n        noOptionsText: 'لا يوجد خيارات',\r\n        openText: 'فتح'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'إغلاق'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'التنقل عبر الصفحات',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'انتقل إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'انتقل إلى الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'انتقل إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'انتقل إلى الصفحة السابقة';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const arSA = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'إظهار المسار'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'الانتقال إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'الانتقال إلى الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'الانتقال إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'الانتقال إلى الصفحة السابقة';\r\n        },\r\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\r\n        emptyLabelText: 'فارغ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'مسح',\r\n        closeText: 'إغلاق',\r\n        loadingText: 'جار التحميل...',\r\n        noOptionsText: 'لا توجد خيارات',\r\n        openText: 'فتح'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'إغلاق'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'التنقل عبر الصفحات',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'الانتقال إلى '} صفحة ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'الانتقال إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'الانتقال الي الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'الانتقال إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'الانتقال إلى الصفحة السابقة';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const arSD = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'إظهار المسار'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'انتقل إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'انتقل إلى الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'انتقل إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'انتقل إلى الصفحة السابقة';\r\n        },\r\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\r\n        emptyLabelText: 'فارغ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'مسح',\r\n        closeText: 'إغلاق',\r\n        loadingText: 'جار التحميل...',\r\n        noOptionsText: 'لا يوجد خيارات',\r\n        openText: 'فتح'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'إغلاق'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'التنقل عبر الصفحات',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'انتقل إلى الصفحة الأولى';\r\n          }\r\n          if (type === 'last') {\r\n            return 'انتقل الي الصفحة الأخيرة';\r\n          }\r\n          if (type === 'next') {\r\n            return 'انتقل إلى الصفحة التالية';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'انتقل إلى الصفحة السابقة';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const azAZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Yolu göstər'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Birinci səhifəyə keç';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Sonuncu səhifəyə keç';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Növbəti səhifəyə keç';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Əvvəlki səhifəyə keç';\r\n        },\r\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Ulduz';\r\n          const lastDigit = value % 10;\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Ulduzlar';\r\n          }\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Boş'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Silmək',\r\n        closeText: 'Bağlamaq',\r\n        loadingText: 'Yüklənir…',\r\n        noOptionsText: 'Seçimlər mövcud deyil',\r\n        openText: 'Открыть'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Bağlamaq'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Səhifənin naviqasiyası',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Birinci səhifəyə keç';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Sonuncu səhifəyə keç';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Növbəti səhifəyə keç';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Əvvəlki səhifəyə keç';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const bnBD = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'পথ দেখান'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'প্রথম পৃষ্ঠায় যান';\r\n          }\r\n          if (type === 'last') {\r\n            return 'শেষ পৃষ্ঠায় যান';\r\n          }\r\n          if (type === 'next') {\r\n            return 'পরবর্তী পৃষ্ঠায় যান';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'আগের পৃষ্ঠায় যান';\r\n        },\r\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} স্টার`,\r\n        emptyLabelText: 'খালি'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'পরিষ্কার করুন',\r\n        closeText: 'বন্ধ করুন',\r\n        loadingText: 'লোড হচ্ছে…',\r\n        noOptionsText: 'কোন অপশন নেই',\r\n        openText: 'ওপেন করুন'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'বন্ধ করুন'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'পেজিনেশন নেভিগেশন',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'প্রথম পৃষ্ঠায় যান';\r\n          }\r\n          if (type === 'last') {\r\n            return 'শেষ পৃষ্ঠায় যান';\r\n          }\r\n          if (type === 'next') {\r\n            return 'পরবর্তী পৃষ্ঠায় যান';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'আগের পৃষ্ঠায় যান';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const beBY = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Паказаць шлях'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Перайсці на першую старонку';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перайсці на апошнюю старонку';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перайсці на наступную старонку';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перайсці на папярэднюю старонку';\r\n        },\r\n        labelRowsPerPage: 'Радкоў на старонцы:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} з ${count !== -1 ? count : `больш чым ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Зорак';\r\n          const lastDigit = value % 10;\r\n          if (lastDigit > 1 && lastDigit < 5 && (value < 10 || value > 20)) {\r\n            pluralForm = 'Зоркі';\r\n          } else if (lastDigit === 1 && value % 100 !== 11) {\r\n            pluralForm = 'Зорка';\r\n          }\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Рэйтынг адсутнічае'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Ачысціць',\r\n        closeText: 'Закрыць',\r\n        loadingText: 'Загрузка…',\r\n        noOptionsText: 'Няма варыянтаў',\r\n        openText: 'Адкрыць'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Закрыць'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навігацыя па старонкам',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            if (selected) {\r\n              return `${page} старонка`;\r\n            }\r\n            return `Перайсці на ${page} старонку`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Перайсці на першую старонку';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перайсці на апошнюю старонку';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перайсці на наступную старонку';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перайсці на папярэднюю старонку';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const bgBG = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показване на пътя'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Отиди на първата страница';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Отиди на последната страница';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Отиди на следващата страница';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Отиди на предишната страница';\r\n        },\r\n        labelRowsPerPage: 'Редове на страница:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\r\n        emptyLabelText: 'Изчисти'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Изчисти',\r\n        closeText: 'Затвори',\r\n        loadingText: 'Зареждане…',\r\n        noOptionsText: 'Няма налични опции',\r\n        openText: 'Отвори'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Затвори'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Пагинация',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Към '}страница ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Отиди на първата страница';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Отиди на последната страница';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Отиди на следващата страница';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Отиди на предишната страница';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const caES = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //    expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Files per pàgina:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\r\n        emptyLabelText: 'Buit'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Netejar',\r\n        closeText: 'Tancar',\r\n        loadingText: 'Carregant…',\r\n        noOptionsText: 'Sense opcions',\r\n        openText: 'Obert'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Tancat'\r\n      }\r\n    }\r\n    // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n  }\r\n};\r\nexport const csCZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Ukázat cestu'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Jít na první stránku';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Jít na poslední stránku';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Jít na další stránku';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Jít na předchozí stránku';\r\n        },\r\n        labelRowsPerPage: 'Řádků na stránce:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          if (value === 1) {\r\n            return `${value} hvězdička`;\r\n          }\r\n          if (value >= 2 && value <= 4) {\r\n            return `${value} hvězdičky`;\r\n          }\r\n          return `${value} hvězdiček`;\r\n        },\r\n        emptyLabelText: 'Prázdné'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vymazat',\r\n        closeText: 'Zavřít',\r\n        loadingText: 'Načítání…',\r\n        noOptionsText: 'Žádné možnosti',\r\n        openText: 'Otevřít'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zavřít'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigace stránkováním',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Jít na první stránku';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Jít na poslední stránku';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Jít na další stránku';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Jít na předchozí stránku';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const daDK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Vis sti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå til den første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til den sidste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til den næste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til den forrige side';\r\n        },\r\n        labelRowsPerPage: 'Rækker pr side:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Slet',\r\n        closeText: 'Luk',\r\n        loadingText: 'Indlæser…',\r\n        noOptionsText: 'Ingen muligheder',\r\n        openText: 'Åben'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Luk'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sideinddelings navigation',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Go to '}page ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Gå til den første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til den sidste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til den næste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til den forrige side';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const deDE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pfad anzeigen'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Zur ersten Seite';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Zur letzten Seite';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Zur nächsten Seite';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Zur vorherigen Seite';\r\n        },\r\n        labelRowsPerPage: 'Zeilen pro Seite:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\r\n        emptyLabelText: 'Keine Wertung'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Leeren',\r\n        closeText: 'Schließen',\r\n        loadingText: 'Wird geladen…',\r\n        noOptionsText: 'Keine Optionen',\r\n        openText: 'Öffnen'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Schließen'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigation via Seitennummerierung',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Zur ersten Seite';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Zur letzten Seite';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Zur nächsten Seite';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Zur vorherigen Seite';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const elGR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Εμφάνιση διαδρομής'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Πρώτη σελίδα';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Τελευταία σελίδα';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Επόμενη σελίδα';\r\n          }\r\n\r\n          // if (type === \"previous\") {\r\n          return 'Προηγούμενη σελίδα';\r\n        },\r\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\r\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Καθαρισμός',\r\n        closeText: 'Κλείσιμο',\r\n        loadingText: 'Φόρτωση…',\r\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\r\n        openText: 'Άνοιγμα'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Κλείσιμο'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Πλοήγηση σε σελίδες',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Πρώτη σελίδα';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Τελευταία σελίδα';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Επόμενη σελίδα';\r\n          }\r\n\r\n          // if (type === \"previous\") {\r\n          return 'Προηγούμενη σελίδα';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// default\r\nexport const enUS = {\r\n  /*\r\n  components: {\r\n    MuiBreadcrumbs: { defaultProps: {\r\n      expandText: 'Show path',\r\n    }},\r\n    MuiTablePagination: { defaultProps: {\r\n      getItemAriaLabel: (type) => {\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n      labelRowsPerPage: 'Rows per page:',\r\n      labelDisplayedRows: ({ from, to, count }) =>\r\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`, \r\n    }},\r\n    MuiRating: { defaultProps: {\r\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\r\n      emptyLabelText: 'Empty',\r\n    }},\r\n    MuiAutocomplete: { defaultProps: {\r\n      clearText: 'Clear',\r\n      closeText: 'Close',\r\n      loadingText: 'Loading…',\r\n      noOptionsText: 'No options',\r\n      openText: 'Open',\r\n    }},\r\n    MuiAlert: { defaultProps: {\r\n      closeText: 'Close',\r\n    }},\r\n    MuiPagination: {  defaultProps: {\r\n      'aria-label': 'Pagination navigation',\r\n      getItemAriaLabel: (type, page, selected) => {\r\n        if (type === 'page') {\r\n          return `${selected ? '' : 'Go to '}page ${page}`;\r\n        }\r\n        if (type === 'first') {\r\n          return 'Go to first page';\r\n        }\r\n        if (type === 'last') {\r\n          return 'Go to last page';\r\n        }\r\n        if (type === 'next') {\r\n          return 'Go to next page';\r\n        }\r\n        // if (type === 'previous') {\r\n        return 'Go to previous page';\r\n      },\r\n    }},\r\n  },\r\n  */\r\n};\r\nexport const esES = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar ruta'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ir a la primera página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ir a la última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ir a la página siguiente';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ir a la página anterior';\r\n        },\r\n        labelRowsPerPage: 'Filas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vacío'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpiar',\r\n        closeText: 'Cerrar',\r\n        loadingText: 'Cargando…',\r\n        noOptionsText: 'Sin opciones',\r\n        openText: 'Abierto'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Cerrar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Paginador',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Ir a la primera página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ir a la última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ir a la página siguiente';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ir a la página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const etEE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Näita teed'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Vali esimene lehekülg';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Vali viimane lehekülg';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Vali järgmine lehekülg';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Vali eelmine lehekülg';\r\n        },\r\n        labelRowsPerPage: 'Ridu leheküljel:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\r\n        emptyLabelText: 'Tühi'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tühjenda',\r\n        closeText: 'Sulge',\r\n        loadingText: 'Laen…',\r\n        noOptionsText: 'Valikuid ei ole',\r\n        openText: 'Ava'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sulge'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Lehekülgede valik',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Vali esimene lehekülg';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Vali viimane lehekülg';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Vali järgmine lehekülg';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Vali eelmine lehekülg';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const faIR = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'نمایش مسیر'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'رفتن به اولین صفحه';\r\n          }\r\n          if (type === 'last') {\r\n            return 'رفتن به آخرین صفحه';\r\n          }\r\n          if (type === 'next') {\r\n            return 'رفتن به صفحه‌ی بعدی';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'رفتن به صفحه‌ی قبلی';\r\n        },\r\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} از ${count !== -1 ? count : `بیشتر از ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ستاره`,\r\n        emptyLabelText: 'خالی'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'پاک‌کردن',\r\n        closeText: 'بستن',\r\n        loadingText: 'در حال بارگذاری…',\r\n        noOptionsText: 'بی‌نتیجه',\r\n        openText: 'بازکردن'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'بستن'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ناوبری صفحه',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'رفتن به اولین صفحه';\r\n          }\r\n          if (type === 'last') {\r\n            return 'رفتن به آخرین صفحه';\r\n          }\r\n          if (type === 'next') {\r\n            return 'رفتن به صفحه‌ی بعدی';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'رفتن به صفحه‌ی قبلی';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const fiFI = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Näytä reitti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Mene ensimmäiselle sivulle';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Mene viimeiselle sivulle';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Mene seuraavalle sivulle';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Mene edelliselle sivulle';\r\n        },\r\n        labelRowsPerPage: 'Rivejä per sivu:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\r\n        emptyLabelText: 'Tyhjä'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tyhjennä',\r\n        closeText: 'Sulje',\r\n        loadingText: 'Ladataan…',\r\n        noOptionsText: 'Ei valintoja',\r\n        openText: 'Avaa'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sulje'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sivutus navigaatio',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Mene ensimmäiselle sivulle';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Mene viimeiselle sivulle';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Mene seuraavalle sivulle';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Mene edelliselle sivulle';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const frFR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Montrer le chemin'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Aller à la première page';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Aller à la dernière page';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Aller à la page suivante';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Aller à la page précédente';\r\n        },\r\n        labelRowsPerPage: 'Lignes par page :',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vide'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vider',\r\n        closeText: 'Fermer',\r\n        loadingText: 'Chargement…',\r\n        noOptionsText: 'Pas de résultats',\r\n        openText: 'Ouvrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fermer'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'navigation de pagination',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Aller à la première page';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Aller à la dernière page';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Aller à la page suivante';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Aller à la page précédente';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const heIL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'הצג נתיב'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'לעמוד הראשון';\r\n          }\r\n          if (type === 'last') {\r\n            return 'לעמוד האחרון';\r\n          }\r\n          if (type === 'next') {\r\n            return 'לעמוד הבא';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'לעמוד הקודם';\r\n        },\r\n        labelRowsPerPage: 'שורות בעמוד:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\r\n        emptyLabelText: 'ריק'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'נקה',\r\n        closeText: 'סגור',\r\n        loadingText: 'טוען…',\r\n        noOptionsText: 'אין אופציות',\r\n        openText: 'פתח'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'סגור'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ניווט בעמודים',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'לעמוד הראשון';\r\n          }\r\n          if (type === 'last') {\r\n            return 'לעמוד האחרון';\r\n          }\r\n          if (type === 'next') {\r\n            return 'לעמוד הבא';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'לעמוד הקודם';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const hiIN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'रास्ता दिखायें'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'पहले पृष्ठ पर जाएँ';\r\n          }\r\n          if (type === 'last') {\r\n            return 'अंतिम पृष्ठ पर जाएँ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'अगले पृष्ठ पर जाएँ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'पिछले पृष्ठ पर जाएँ';\r\n        },\r\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\r\n        emptyLabelText: 'रिक्त'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'हटायें',\r\n        closeText: 'बंद करें',\r\n        loadingText: 'लोड हो रहा है…',\r\n        noOptionsText: 'कोई विकल्प नहीं',\r\n        openText: 'खोलें'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'बंद करें'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'पृस्ठानुसार संचालन',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'पहले पृष्ठ पर जाएँ';\r\n          }\r\n          if (type === 'last') {\r\n            return 'अंतिम पृष्ठ पर जाएँ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'अगले पृष्ठ पर जाएँ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'पिछले पृष्ठ पर जाएँ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Croatian - Hrvatski\r\nexport const hrHR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaži putanju'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Idi na posljednju stranicu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Idi na sljedeću stranicu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Idi na prethodnu stranicu';\r\n        },\r\n        labelRowsPerPage: 'Redova po stranici:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          const lastTwoDigits = value % 100;\r\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\r\n            return 'Zvijezde';\r\n          }\r\n          return 'Zvijezda';\r\n        },\r\n        emptyLabelText: 'Prazno'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Briši',\r\n        closeText: 'Zatvori',\r\n        loadingText: 'Učitavanje…',\r\n        noOptionsText: 'Nema opcija',\r\n        openText: 'Otvori'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zatvori'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigacija po stranicama',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Idi na zadnju stranicu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Idi na sljedeću stranicu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Idi na prethodnu stranicu';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const huHU = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Útvonal'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Első oldalra';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Utolsó oldalra';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Következő oldalra';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Előző oldalra';\r\n        },\r\n        labelRowsPerPage: 'Sorok száma:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Csillag`,\r\n        emptyLabelText: 'Üres'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Törlés',\r\n        closeText: 'Bezárás',\r\n        loadingText: 'Töltés…',\r\n        noOptionsText: 'Nincs találat',\r\n        openText: 'Megnyitás'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Bezárás'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Lapozás',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page}. oldal${selected ? '' : 'ra'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Első oldalra';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Utolsó oldalra';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Következő oldalra';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Előző oldalra';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const hyAM = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Տողեր մեկ էջում`'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Աստղ`,\r\n        emptyLabelText: 'Դատարկ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Մաքրել',\r\n        closeText: 'Փակել',\r\n        loadingText: 'Բեռնում…',\r\n        noOptionsText: 'Տարբերակներ չկան',\r\n        openText: 'Բացել'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Փակել'\r\n      }\r\n    }\r\n    // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n  }\r\n};\r\nexport const idID = {\r\n  components: {\r\n    // MuiBreadcrumbs: {\r\n    //   defaultProps: {\r\n    //     expandText: 'Show path',\r\n    //   },\r\n    // },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        // getItemAriaLabel: (type) => {\r\n        //   if (type === 'first') {\r\n        //     return 'Go to first page';\r\n        //   }\r\n        //   if (type === 'last') {\r\n        //     return 'Go to last page';\r\n        //   }\r\n        //   if (type === 'next') {\r\n        //     return 'Go to next page';\r\n        //   }\r\n        //   // if (type === 'previous') {\r\n        //   return 'Go to previous page';\r\n        // },\r\n        labelRowsPerPage: 'Baris per halaman:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Bintang`\r\n        // emptyLabelText: 'Empty',\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Hapus',\r\n        closeText: 'Tutup',\r\n        loadingText: 'Memuat…',\r\n        noOptionsText: 'Tidak ada opsi',\r\n        openText: 'Buka'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Tutup'\r\n      }\r\n    }\r\n    // MuiPagination: {\r\n    //   defaultProps: {\r\n    //     'aria-label': 'Pagination navigation',\r\n    //     getItemAriaLabel: (type, page, selected) => {\r\n    //       if (type === 'page') {\r\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\r\n    //       }\r\n    //       if (type === 'first') {\r\n    //         return 'Go to first page';\r\n    //       }\r\n    //       if (type === 'last') {\r\n    //         return 'Go to last page';\r\n    //       }\r\n    //       if (type === 'next') {\r\n    //         return 'Go to next page';\r\n    //       }\r\n    //       // if (type === 'previous') {\r\n    //       return 'Go to previous page';\r\n    //     },\r\n    //   },\r\n    // },\r\n  }\r\n};\r\nexport const isIS = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Sýna slóð'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Fara á fyrstu síðu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Fara á síðustu síðu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Fara á næstu síðu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Fara á fyrri síðu';\r\n        },\r\n        labelRowsPerPage: 'Raðir á síðu:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} af ${count !== -1 ? count : `fleiri en ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value === 1 ? 'stjarna' : 'stjörnur'}`,\r\n        emptyLabelText: 'Tómt'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Hreinsa',\r\n        closeText: 'Loka',\r\n        loadingText: 'Hlaða…',\r\n        noOptionsText: 'Engar niðurstöður',\r\n        openText: 'Opna'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Loka'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Síðuflakk',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? 'Síða' : 'Fara á síðu'} ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Fara á fyrstu síðu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Fara á síðustu síðu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Fara á næstu síðu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Fara á fyrri síðu';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const itIT = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Visualizza percorso'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Vai alla prima pagina';\r\n          }\r\n          if (type === 'last') {\r\n            return \"Vai all'ultima pagina\";\r\n          }\r\n          if (type === 'next') {\r\n            return 'Vai alla pagina successiva';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Vai alla pagina precedente';\r\n        },\r\n        labelRowsPerPage: 'Righe per pagina:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\r\n        emptyLabelText: 'Vuoto'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Svuota',\r\n        closeText: 'Chiudi',\r\n        loadingText: 'Caricamento in corso…',\r\n        noOptionsText: 'Nessuna opzione',\r\n        openText: 'Apri'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Chiudi'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigazione impaginata',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Vai alla prima pagina';\r\n          }\r\n          if (type === 'last') {\r\n            return \"Vai all'ultima pagina\";\r\n          }\r\n          if (type === 'next') {\r\n            return 'Vai alla pagina successiva';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Vai alla pagina precedente';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const jaJP = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'すべて表示'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '最初のページへ';\r\n          }\r\n          if (type === 'last') {\r\n            return '最後のページへ';\r\n          }\r\n          if (type === 'next') {\r\n            return '次のページへ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return '前のページへ';\r\n        },\r\n        labelRowsPerPage: 'ページあたりの行数:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `星${value}`,\r\n        emptyLabelText: '星なし'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'クリア',\r\n        closeText: '閉じる',\r\n        loadingText: '読み込み中…',\r\n        noOptionsText: 'データがありません',\r\n        openText: '開く'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '閉じる'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'ページ選択',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `ページ${page}${selected ? '' : 'へ'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return '最初のページへ';\r\n          }\r\n          if (type === 'last') {\r\n            return '最後のページへ';\r\n          }\r\n          if (type === 'next') {\r\n            return '次のページへ';\r\n          }\r\n          // if (type === 'previous') {\r\n          return '前のページへ';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const khKH = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'បង្ហាញផ្លូវ'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ទៅទំព័រដំបូង';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ទៅទំព័រចុងក្រោយ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ទៅទំព័របន្ទាប់';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ទៅទំព័រមុន';\r\n        },\r\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\r\n        emptyLabelText: 'ទទេ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'លុបចោល',\r\n        closeText: 'បិទ',\r\n        loadingText: 'កំពុងលោត…',\r\n        noOptionsText: 'គ្មានជម្រើស',\r\n        openText: 'បើក'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'បិទ'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'រុករកទំព័រ',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'ទៅទំព័រដំបូង';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ទៅទំព័រចុងក្រោយ';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ទៅទំព័របន្ទាប់';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ទៅទំព័រមុន';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const koKR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '경로 보기'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '첫 번째 페이지로 이동';\r\n          }\r\n          if (type === 'last') {\r\n            return '마지막 페이지로 이동';\r\n          }\r\n          if (type === 'next') {\r\n            return '다음 페이지로 이동';\r\n          }\r\n          // if (type === 'previous') {\r\n          return '이전 페이지로 이동';\r\n        },\r\n        labelRowsPerPage: '페이지 당 행:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 점`,\r\n        emptyLabelText: '빈 텍스트'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '지우기',\r\n        closeText: '닫기',\r\n        loadingText: '불러오는 중…',\r\n        noOptionsText: '옵션 없음',\r\n        openText: '열기'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '닫기'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': '페이지네이션 네비게이션',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return '첫 번째 페이지로 이동';\r\n          }\r\n          if (type === 'last') {\r\n            return '마지막 페이지로 이동';\r\n          }\r\n          if (type === 'next') {\r\n            return '다음 페이지로 이동';\r\n          }\r\n          // if (type === 'previous') {\r\n          return '이전 페이지로 이동';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const kuCKB = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'ڕێچکە پیشان بدە'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'چوونە یەکەم پەڕە';\r\n          }\r\n          if (type === 'last') {\r\n            return 'چوونە کۆتا پەڕە';\r\n          }\r\n          if (type === 'next') {\r\n            return 'چوونە پەڕەی دواتر';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\r\n        },\r\n        labelRowsPerPage: 'ژمارەی ڕیزەکان لە هەر پەڕەیەک:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} لە ${count !== -1 ? count : ` زیاترە لە${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'ئەستێرەکان' : 'ئەستێرە'}`,\r\n        emptyLabelText: 'خاڵیە'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'سڕینەوە',\r\n        closeText: 'داخستن',\r\n        loadingText: 'لە بارکردندایە...',\r\n        noOptionsText: 'هیچ بژاردەیەک نیە',\r\n        openText: 'کردنەوە'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'داخستن'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'گەڕان لە پەڕەکان',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'چوون بۆ '} پەڕەی ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'چوونە یەکەم پەڕە';\r\n          }\r\n          if (type === 'last') {\r\n            return 'چوونە کۆتا پەڕە';\r\n          }\r\n          if (type === 'next') {\r\n            return 'چوونە پەڕەی دواتر';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const kuLatn = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Rê nîşan bide'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Biçe rûpela yekem';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Biçe rûpela dawî';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Biçe rûpela din';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Biçe rûpela berê';\r\n        },\r\n        labelRowsPerPage: 'Rêz li ser rûpelê:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} of ${count !== -1 ? count : `zêdetir ji ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stêrk`,\r\n        emptyLabelText: 'Vala'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Paqij bike',\r\n        closeText: 'Bigre',\r\n        loadingText: 'Tê barkirin…',\r\n        noOptionsText: 'Vebijêrk tune',\r\n        openText: 'Veke'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Bigre'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navîgasyona rûpelan',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Biçe '}rûpel ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Biçe rûpela yekem';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Biçe rûpela dawî';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Biçe rûpela din';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Biçe rûpela berê';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const kkKZ = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Толық жолды көрсету'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Бірінші бетке өту';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Соңғы бетке өту';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Келесі бетке өту';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Алдыңғы бетке өту';\r\n        },\r\n        labelRowsPerPage: 'Беттегі қатарлар:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} жұлдыз`,\r\n        emptyLabelText: 'Рейтинг жоқ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Тазарту',\r\n        closeText: 'Жабу',\r\n        loadingText: 'Жүктелуде…',\r\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\r\n        openText: 'Ашу'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Жабу'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Беттерді шарлау',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            if (selected) {\r\n              return `${page} — бет`;\r\n            }\r\n            return `${page} — бетке өту`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Бірінші бетке өту';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Соңғы бетке өту';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Келесі бетке өту';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Алдыңғы бетке өту';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Macedonian - Македонски\r\nexport const mkMK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Прикажи патека'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Оди на прва страница';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Оди на последна страница';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Оди на следна страница';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Оди на предходна страница';\r\n        },\r\n        labelRowsPerPage: 'Редови по страница:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\r\n        },\r\n        emptyLabelText: 'Празно'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Избриши',\r\n        closeText: 'Затвори',\r\n        loadingText: 'Се презема',\r\n        noOptionsText: 'Нема опција',\r\n        openText: 'Отвори'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Затвори'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навигација низ страници',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Оди на прва страница';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Оди на последна страница';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Оди на следна страница';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Оди на предходна страница';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Myanmar - မြန်မာ\r\nexport const myMY = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'လမ်းကြောင်းပြပါ။'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          if (type === 'last') {\r\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          if (type === 'next') {\r\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\r\n        },\r\n        labelRowsPerPage: 'စာမျက်နှာအလိုက် အတန်းများ:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} ၏ ${count !== -1 ? count : `ထက်ပိုပြီး ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          return `${value} ကြယ်ပွင့်${lastDigit === 1 ? '၎' : ''}`;\r\n        },\r\n        emptyLabelText: 'ဗလာ'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'ရှင်းလင်းသော',\r\n        closeText: 'ပိတ်လိုက်',\r\n        loadingText: 'ဖွင့်နေသည်…',\r\n        noOptionsText: 'ရွေးချယ်ခွင့်မရှိပါ။',\r\n        openText: 'ဖွင့်သည်။'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'ပိတ်လိုက်'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Pagination အညွှန်း',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'သွားပါ။ '}စာမျက်နှာ ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          if (type === 'last') {\r\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          if (type === 'next') {\r\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Malay-Melayu\r\nexport const msMS = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Tunjukkan laluan'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Pergi ke halaman pertama';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Pergi ke halaman terakhir';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Pergi ke halaman seterusnya';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Pergi ke halaman sebelumnya';\r\n        },\r\n        labelRowsPerPage: 'Baris setiap halaman:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} daripada ${count !== -1 ? count : `lebih daripada ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          return `${value} Bintang${lastDigit === 1 ? 's' : ''}`;\r\n        },\r\n        emptyLabelText: 'kosong'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Jelas',\r\n        closeText: 'tutup',\r\n        loadingText: 'Memuatkan…',\r\n        noOptionsText: 'Tiada pilihan',\r\n        openText: 'Buka'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'tutup'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigasi penomboran',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Pergi ke '}muka surat ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Pergi ke halaman pertama';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Pergi ke halaman terakhir';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Pergi ke halaman seterusnya';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Pergi ke halaman sebelumnya';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Nepali-नेपाली\r\nexport const neNP = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'बाटो देखाउनुहोस्'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'पहिलो पृष्ठमा जानुहोस्';\r\n          }\r\n          if (type === 'last') {\r\n            return 'अन्तिम पृष्ठमा जानुहोस्';\r\n          }\r\n          if (type === 'next') {\r\n            return 'अर्को पृष्ठमा जानुहोस्';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\r\n        },\r\n        labelRowsPerPage: 'प्रति पृष्ठ पङ्क्तिहरू:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} को ${count !== -1 ? count : `धेरै ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          return `${value} तारा${lastDigit === 1 ? 'स' : ''}`;\r\n        },\r\n        emptyLabelText: 'खाली'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'खाली गर्नुहोस्',\r\n        closeText: 'बन्द गर्नुहोस्',\r\n        loadingText: 'लोड हुँदै...',\r\n        noOptionsText: 'कुनै विकल्प छैन',\r\n        openText: 'खोल्नुहोस्'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'बन्द गर्नुहोस्'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'पृष्ठांकन नेभिगेसन',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'जाऊ त्यहाँ '}पृष्ठ ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'पहिलो पृष्ठमा जानुहोस्';\r\n          }\r\n          if (type === 'last') {\r\n            return 'अन्तिम पृष्ठमा जानुहोस्';\r\n          }\r\n          if (type === 'next') {\r\n            return 'अर्को पृष्ठमा जानुहोस्';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const nbNO = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Vis sti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til forrige side';\r\n        },\r\n        labelRowsPerPage: 'Rader per side:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tøm',\r\n        closeText: 'Lukk',\r\n        loadingText: 'Laster inn…',\r\n        noOptionsText: 'Ingen alternativer',\r\n        openText: 'Åpne'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Lukk'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Paginering navigasjon',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gå til '}side ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til forrige side';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const nnNO = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Vis sti'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til førre side';\r\n        },\r\n        labelRowsPerPage: 'Rader per side:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} av ${count !== -1 ? count : `fleire enn ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} stjerne${value !== 1 ? 'r' : ''}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Tøm',\r\n        closeText: 'Lukk',\r\n        loadingText: 'Lastar inn…',\r\n        noOptionsText: 'Ingen alternativ',\r\n        openText: 'Opna'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Lukk'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigasjon for paginering',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gå til '}side ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Gå til første side';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå til siste side';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå til neste side';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå til førre side';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const nlNL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pad tonen'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ga naar eerste pagina';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ga naar laatste pagina';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ga naar volgende pagina';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ga naar vorige pagina';\r\n        },\r\n        labelRowsPerPage: 'Regels per pagina:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\r\n        emptyLabelText: 'Leeg'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Wissen',\r\n        closeText: 'Sluiten',\r\n        loadingText: 'Laden…',\r\n        noOptionsText: 'Geen opties',\r\n        openText: 'Openen'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Sluiten'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigatie via paginering',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Ga naar eerste pagina';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ga naar laatste pagina';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ga naar volgende pagina';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ga naar vorige pagina';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const plPL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaż ścieżkę'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Przejdź do pierwszej strony';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Przejdź do ostatniej strony';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Przejdź do następnej strony';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Przejdź do poprzedniej strony';\r\n        },\r\n        labelRowsPerPage: 'Wierszy na stronę:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'gwiazdek';\r\n          const lastDigit = value % 10;\r\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'gwiazdki';\r\n          } else if (value === 1) {\r\n            pluralForm = 'gwiazdka';\r\n          }\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Brak gwiazdek'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Wyczyść',\r\n        closeText: 'Zamknij',\r\n        loadingText: 'Ładowanie…',\r\n        noOptionsText: 'Brak opcji',\r\n        openText: 'Otwórz'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zamknij'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Nawigacja podziału na strony',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Przejdź do pierwszej strony';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Przejdź do ostatniej strony';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Przejdź do następnej strony';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Przejdź do poprzedniej strony';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const psAF = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'لاره ښکاره کړه'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'لومړۍ پاڼې ته لاړ شه';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ورستۍ پاڼې ته لاړ شه';\r\n          }\r\n          if (type === 'next') {\r\n            return 'بلی پاڼې ته لاړ شه';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'مخکینۍ پاڼې ته لاړ شه';\r\n        },\r\n        labelRowsPerPage: 'په پاڼه کی د کرښو شمیر',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${count !== -1 ? count : `${to} زیات له`} ${to}- ${from} د`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ستوری`,\r\n        emptyLabelText: 'خالی'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'پاک کول',\r\n        closeText: 'تړل',\r\n        loadingText: '... لوډ کیږی',\r\n        noOptionsText: 'بی پایلی',\r\n        openText: 'خلاصول'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'تړل'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'د پاڼو ترتیب',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : ' ته لاړ شه'}پاڼې ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'لومړۍ پاڼی ته لاړ شه';\r\n          }\r\n          if (type === 'last') {\r\n            return 'وروستۍ پاڼې ته لاړه شه';\r\n          }\r\n          if (type === 'next') {\r\n            return 'بلې پاڼې ته لاړ شه';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'مخکنۍ پاڼې ته لاړ شه';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ptBR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar caminho'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ir para a primeira página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ir para a última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ir para a próxima página';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ir para a página anterior';\r\n        },\r\n        labelRowsPerPage: 'Linhas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vazio'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpar',\r\n        closeText: 'Fechar',\r\n        loadingText: 'Carregando…',\r\n        noOptionsText: 'Sem opções',\r\n        openText: 'Abrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fechar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navegar pela paginação',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Ir para a primeira página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ir para a última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ir para a próxima página';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ir para a página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ptPT = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mostrar caminho'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Primeira página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Próxima página';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Página anterior';\r\n        },\r\n        labelRowsPerPage: 'Linhas por página:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Vazio'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Limpar',\r\n        closeText: 'Fechar',\r\n        loadingText: 'A carregar…',\r\n        noOptionsText: 'Sem opções',\r\n        openText: 'Abrir'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Fechar'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navegar por páginas',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Primeira página';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Última página';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Próxima página';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Página anterior';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const roRO = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Arată calea'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Mergi la prima pagină';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Mergi la ultima pagină';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Mergi la pagina următoare';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Mergi la pagina precedentă';\r\n        },\r\n        labelRowsPerPage: 'Rânduri pe pagină:'\r\n        // labelDisplayedRows: ({ from, to, count }) =>\r\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\r\n        emptyLabelText: 'Gol'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Șterge',\r\n        closeText: 'Închide',\r\n        loadingText: 'Se încarcă…',\r\n        noOptionsText: 'Nicio opțiune',\r\n        openText: 'Deschide'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Închide'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigare prin paginare',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Mergi la prima pagină';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Mergi la ultima pagină';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Mergi la pagina următoare';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Mergi la pagina precedentă';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Serbian - Srpski\r\nexport const srRS = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Pokaži putanju'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Idi na poslednju stranicu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Idi na sledeću stranicu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Idi na prethodnu stranicu';\r\n        },\r\n        labelRowsPerPage: 'Redova po stranici:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          const lastDigit = value % 10;\r\n          const lastTwoDigits = value % 100;\r\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\r\n            return 'Zvezde';\r\n          }\r\n          return 'Zvezda';\r\n        },\r\n        emptyLabelText: 'Prazno'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Briši',\r\n        closeText: 'Zatvori',\r\n        loadingText: 'Učitavanje…',\r\n        noOptionsText: 'Nema opcija',\r\n        openText: 'Otvori'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zatvori'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigacija po stranicama',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Idi na prvu stranicu';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Idi na zadnju stranicu';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Idi na sledeću stranicu';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Idi na prethodnu stranicu';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ruRU = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показать полный путь'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Перейти на первую страницу';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перейти на последнюю страницу';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перейти на следующую страницу';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перейти на предыдущую страницу';\r\n        },\r\n        labelRowsPerPage: 'Строк на странице:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Звёзд';\r\n          const lastDigit = value % 10;\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Звезды';\r\n          } else if (lastDigit === 1) {\r\n            pluralForm = 'Звезда';\r\n          }\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Рейтинг отсутствует'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Очистить',\r\n        closeText: 'Закрыть',\r\n        loadingText: 'Загрузка…',\r\n        noOptionsText: 'Нет доступных вариантов',\r\n        openText: 'Открыть'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Закрыть'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навигация по страницам',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            if (selected) {\r\n              return `${page} страница`;\r\n            }\r\n            return `Перейти на ${page} страницу`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Перейти на первую страницу';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перейти на последнюю страницу';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перейти на следующую страницу';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перейти на предыдущую страницу';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const siLK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'ගමන් මඟ පෙන්වන්න'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'පළමු පිටුවට යන්න';\r\n          }\r\n          if (type === 'last') {\r\n            return 'අවසාන පිටුවට යන්න';\r\n          }\r\n          if (type === 'next') {\r\n            return 'මීළඟ පිටුවට යන්න';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'පෙර පිටුවට යන්න';\r\n        },\r\n        labelRowsPerPage: 'පිටුවක පේළි:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `තරු ${value}`,\r\n        emptyLabelText: 'හිස්'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'මකන්න',\r\n        closeText: 'වසන්න',\r\n        loadingText: 'නැංවෙමින්…',\r\n        noOptionsText: 'විකල්ප නැත',\r\n        openText: 'විවෘත කරන්න'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'වසන්න'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'පිටු අතර සංචරණය',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'පළමු පිටුවට යන්න';\r\n          }\r\n          if (type === 'last') {\r\n            return 'අවසාන පිටුවට යන්න';\r\n          }\r\n          if (type === 'next') {\r\n            return 'මීළඟ පිටුවට යන්න';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'පෙර පිටුවට යන්න';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const skSK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Ukázať cestu '\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Ísť na prvú stránku';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ísť na poslednú stránku';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ísť na ďaľšiu stránku';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ísť na predchádzajúcu stránku';\r\n        },\r\n        labelRowsPerPage: 'Riadkov na stránke:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          if (value === 1) {\r\n            return `${value} hviezdička`;\r\n          }\r\n          if (value >= 2 && value <= 4) {\r\n            return `${value} hviezdičky`;\r\n          }\r\n          return `${value} hviezdičiek`;\r\n        },\r\n        emptyLabelText: 'Prázdne'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Vymazať',\r\n        closeText: 'Zavrieť',\r\n        loadingText: 'Načítanie…',\r\n        noOptionsText: 'Žiadne možnosti',\r\n        openText: 'Otvoriť'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Zavrieť'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Navigácia stránkovanim',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Ísť na prvú stránku';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Ísť na poslednú stránku';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Ísť na ďaľšiu stránku';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Ísť na predchádzajúcu stránku';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const svSE = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Visa sökväg'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Gå till första sidan';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå till sista sidan';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå till nästa sida';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå till föregående sida';\r\n        },\r\n        labelRowsPerPage: 'Rader per sida:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\r\n        emptyLabelText: 'Tom'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Rensa',\r\n        closeText: 'Stäng',\r\n        loadingText: 'Laddar…',\r\n        noOptionsText: 'Inga alternativ',\r\n        openText: 'Öppna'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Stäng'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sidnavigering',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Gå till första sidan';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Gå till sista sidan';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Gå till nästa sida';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Gå till föregående sida';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const thTH = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'แสดงเส้นทาง'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'ไปที่หน้าแรก';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ไปที่หน้าสุดท้าย';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ไปที่หน้าถัดไป';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ไปที่หน้าก่อน';\r\n        },\r\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ดาว`,\r\n        emptyLabelText: 'ว่างเปล่า'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'เคลียร์',\r\n        closeText: 'ปิด',\r\n        loadingText: 'กำลังโหลด…',\r\n        noOptionsText: 'ไม่มีตัวเลือก',\r\n        openText: 'เปิด'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'ปิด'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': '',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'ไปที่หน้าแรก';\r\n          }\r\n          if (type === 'last') {\r\n            return 'ไปที่หน้าสุดท้าย';\r\n          }\r\n          if (type === 'next') {\r\n            return 'ไปที่หน้าถัดไป';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'ไปที่หน้าก่อน';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const trTR = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Yolu göster'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'İlk sayfaya git';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Son sayfaya git';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Sonraki sayfaya git';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Önceki sayfaya git';\r\n        },\r\n        labelRowsPerPage: 'Sayfa başına satır:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}-${to} / ${count !== -1 ? count : `${to}'den fazla`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Yıldız`,\r\n        emptyLabelText: 'Boş'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Temizle',\r\n        closeText: 'Kapat',\r\n        loadingText: 'Yükleniyor…',\r\n        noOptionsText: 'Seçenek yok',\r\n        openText: 'Aç'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Kapat'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sayfa navigasyonu',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'İlk sayfaya git';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Son sayfaya git';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Sonraki sayfaya git';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Önceki sayfaya git';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Tagalog-Tagalog\r\nexport const tlTL = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Ipakita ang landas'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Pumunta sa unang pahina';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Pumunta sa huling pahina';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Pumunta sa susunod na pahina';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Pumunta sa nakaraang pahina';\r\n        },\r\n        labelRowsPerPage: 'Mga hilera bawat pahina:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} ng ${count !== -1 ? count : `higit sa ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} Bituin${value !== 1 ? 's' : ''}`,\r\n        emptyLabelText: 'Walang laman'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Maaliwalas',\r\n        closeText: 'Isara',\r\n        loadingText: 'Naglo-load…',\r\n        noOptionsText: 'Walang mga pagpipilian',\r\n        openText: 'Bukas'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Isara'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Sayfa navigasyonu',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Pumunta sa'}pahina ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Pumunta sa unang pahina';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Pumunta sa huling pahina';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Pumunta sa susunod na pahina';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Pumunta sa nakaraang pahina';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const ukUA = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Показати шлях сторінок'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Перейти на першу сторінку';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перейти на останню сторінку';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перейти на наступну сторінку';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перейти на попередню сторінку';\r\n        },\r\n        labelRowsPerPage: 'Рядків на сторінці:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => {\r\n          let pluralForm = 'Зірок';\r\n          const lastDigit = value % 10;\r\n          if (lastDigit > 1 && lastDigit < 5) {\r\n            pluralForm = 'Зірки';\r\n          } else if (lastDigit === 1) {\r\n            pluralForm = 'Зірка';\r\n          }\r\n          return `${value} ${pluralForm}`;\r\n        },\r\n        emptyLabelText: 'Рейтинг відсутній'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Очистити',\r\n        closeText: 'Згорнути',\r\n        loadingText: 'Завантаження…',\r\n        noOptionsText: 'Немає варіантів',\r\n        openText: 'Розгорнути'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Згорнути'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Навігація сторінками',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Перейти на першу сторінку';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Перейти на останню сторінку';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Перейти на наступну сторінку';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Перейти на попередню сторінку';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const urPK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'راستہ دکھائیں'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'پہلے صفحے پر جائیں';\r\n          }\r\n          if (type === 'last') {\r\n            return 'آخری صفحے پر جائیں';\r\n          }\r\n          if (type === 'next') {\r\n            return 'اگلے صفحے پر جائیں';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'پچھلے صفحے پر جائیں';\r\n        },\r\n        labelRowsPerPage: 'ایک صفحے پر قطاریں:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${count !== -1 ? `${count} میں سے` : `${to} سے ذیادہ میں سے`} ${from} سے ${to} قطاریں`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} ستار${value !== 1 ? 'ے' : 'ہ'}`,\r\n        emptyLabelText: 'خالی'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'کلئیر',\r\n        closeText: 'بند کریں',\r\n        loadingText: 'لوڈ ہو رہا ہے۔۔۔',\r\n        noOptionsText: 'کوئی آپشن نہیں',\r\n        openText: 'کھولیں'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'بند کریں'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'صفحات کی ترتیب',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `صفحہ نمبر ${page}${selected ? '' : ' پر جائیں'}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'پہلے صفحے پر جائیں';\r\n          }\r\n          if (type === 'last') {\r\n            return 'آخری صفحے پر جائیں';\r\n          }\r\n          if (type === 'next') {\r\n            return 'اگلے صفحے پر جائیں';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'پچھلے صفحے پر جائیں';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const viVN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: 'Mở ra'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return 'Tới trang đầu tiên';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Tới trang cuối cùng';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Tới trang tiếp theo';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Về trang trước đó';\r\n        },\r\n        labelRowsPerPage: 'Số hàng mỗi trang:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} sao`,\r\n        emptyLabelText: 'Không có dữ liệu'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: 'Xóa',\r\n        closeText: 'Đóng',\r\n        loadingText: 'Đang tải…',\r\n        noOptionsText: 'Không có lựa chọn nào',\r\n        openText: 'Mở'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: 'Đóng'\r\n      }\r\n    },\r\n    MuiPagination: {\r\n      defaultProps: {\r\n        'aria-label': 'Thanh điều khiển trang',\r\n        getItemAriaLabel: (type, page, selected) => {\r\n          if (type === 'page') {\r\n            return `${selected ? '' : 'Tới '}trang ${page}`;\r\n          }\r\n          if (type === 'first') {\r\n            return 'Tới trang đầu tiên';\r\n          }\r\n          if (type === 'last') {\r\n            return 'Tới trang cuối cùng';\r\n          }\r\n          if (type === 'next') {\r\n            return 'Tới trang tiếp theo';\r\n          }\r\n          // if (type === 'previous') {\r\n          return 'Về trang trước đó';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhCN = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展开'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一页';\r\n          }\r\n          if (type === 'last') {\r\n            return '最后一页';\r\n          }\r\n          if (type === 'next') {\r\n            return '下一页';\r\n          }\r\n          return '上一页';\r\n        },\r\n        labelRowsPerPage: '每页行数:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 颗星`,\r\n        emptyLabelText: '无标签'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清空',\r\n        closeText: '关闭',\r\n        loadingText: '加载中……',\r\n        noOptionsText: '没有可用选项',\r\n        openText: '打开'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '关闭'\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhHK = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展開'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一頁';\r\n          }\r\n          if (type === 'last') {\r\n            return '最後一頁';\r\n          }\r\n          if (type === 'next') {\r\n            return '下一頁';\r\n          }\r\n          return '上一頁';\r\n        },\r\n        labelRowsPerPage: '每頁行數:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 粒星`,\r\n        emptyLabelText: '無標籤'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清除',\r\n        closeText: '關閉',\r\n        loadingText: '載入中……',\r\n        noOptionsText: '沒有可用選項',\r\n        openText: '開啟'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '關閉'\r\n      }\r\n    }\r\n  }\r\n};\r\nexport const zhTW = {\r\n  components: {\r\n    MuiBreadcrumbs: {\r\n      defaultProps: {\r\n        expandText: '展開'\r\n      }\r\n    },\r\n    MuiTablePagination: {\r\n      defaultProps: {\r\n        getItemAriaLabel: type => {\r\n          if (type === 'first') {\r\n            return '第一頁';\r\n          }\r\n          if (type === 'last') {\r\n            return '最後一頁';\r\n          }\r\n          if (type === 'next') {\r\n            return '下一頁';\r\n          }\r\n          return '上一頁';\r\n        },\r\n        labelRowsPerPage: '每頁數量:',\r\n        labelDisplayedRows: ({\r\n          from,\r\n          to,\r\n          count\r\n        }) => `${from} ~ ${to} / ${count !== -1 ? count : `${to} 以上`}`\r\n      }\r\n    },\r\n    MuiRating: {\r\n      defaultProps: {\r\n        getLabelText: value => `${value} 顆星`,\r\n        emptyLabelText: '無標籤'\r\n      }\r\n    },\r\n    MuiAutocomplete: {\r\n      defaultProps: {\r\n        clearText: '清空',\r\n        closeText: '關閉',\r\n        loadingText: '載入中…',\r\n        noOptionsText: '沒有可用選項',\r\n        openText: '打開'\r\n      }\r\n    },\r\n    MuiAlert: {\r\n      defaultProps: {\r\n        closeText: '關閉'\r\n      }\r\n    }\r\n  }\r\n};"],
  "mappings": "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",
  "names": []
}
